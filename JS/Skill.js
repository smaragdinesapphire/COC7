(function () {	
	function occupation_point(characteristics, skillPoint) {	
		var strX = skillPoint.str;
		var conX = skillPoint.con;
		var dexX = skillPoint.dex;
		var appX = skillPoint.app;
		var powX = skillPoint.pow;
		var sizX = skillPoint.siz;
		var IntX = skillPoint.Int;
		var eduX = skillPoint.edu;
		
		return strX*characteristics.str + conX*characteristics.con + dexX*characteristics.dex + appX*characteristics.app + powX*characteristics.pow
				+ sizX*characteristics.siz + IntX*characteristics.Int + eduX*characteristics.edu;		
	};
		
	var skill = function(name, basicPoint, subName, explain) {
		this.name = name;
		this.subName = subName;
		this.basicPoint = basicPoint; 
		this.occupationPoint = 0;
		this.allotPoint = 0;
		this.total = basicPoint;
		this.explain = explain;
	}
	
	skill.prototype.totalPointCalculate = function(){
		
		this.total = this.basicPoint + parseInt(this.occupationPoint) + parseInt(this.allotPoint);
	};
	
	var skillList = Array(60);
	reSkill();
	function reSkill(){
		skillList[0] = new skill("會計",5,"","讓人了解會計程序，與明白一個人物或商務的金融功能。在檢查書籍時，他能發現員工詐欺、掏空基金、賄賂或是勒索款項，以及財務狀況的實際好壞。翻閱舊帳時，能看出過往（穀物、人口買賣、酒纇走私等）金錢的流向。");
		skillList[1] = new skill("人類學",1,"","讓使用者能從個體的行為去辨識、了解他的生活方式。如果觀察某文化一段時間，或是研究一滅絕文化的精確紀錄，即便沒有完整的證據，他也能夠簡單預測其文化的作法與道德觀。好好研究一個月以上，人類學家能開始了解其文化運作，結合心理學能預測其行為與信念。");
		skillList[2] = new skill("鑑定",5,"","用以評估物品的價值，包括品質、材質與做工。同時，技能使用者能指出物品的年代、得知其歷史關聯，與查明贗品。");
		skillList[3] = new skill("考古學",1,"","允許對古文物的年份進行鑑定，與辨別真偽。仔細探查挖掘地點後，他可以推導出先前在此生活者的目的及生活方式。亦能對辨識已滅絕的人類文化的寫作形式有所幫助。");
		skillList[4] = new skill("技藝",5,"自定義","此技能能讓使用者製作或維修物品——通常需要裝備和時間（由 Keeper 決定）。在成功的情況下，工匠能夠做出合適的東西，更高等級的成功，讓物品的品質更好、更準確。一個成功的技藝技能可用來製作複製品或偽造品。困難程度由原物的複雜程度與獨特性而定。如果要偽造文件，則需要偽造文書的技能。成功的技能判定能提供道具的資訊，像是它是何時何地製造的，揭露一些有關的歷史或是技術點，或由誰所製作。越好的專門訓練可以提供更好的特殊範圍知識——科目的知識、它的歷史與當代達人。這是一個集合技能，必須選擇專門技能。");
		skillList[5] = new skill("技藝",5,"自定義","此技能能讓使用者製作或維修物品——通常需要裝備和時間（由 Keeper 決定）。在成功的情況下，工匠能夠做出合適的東西，更高等級的成功，讓物品的品質更好、更準確。一個成功的技藝技能可用來製作複製品或偽造品。困難程度由原物的複雜程度與獨特性而定。如果要偽造文件，則需要偽造文書的技能。成功的技能判定能提供道具的資訊，像是它是何時何地製造的，揭露一些有關的歷史或是技術點，或由誰所製作。越好的專門訓練可以提供更好的特殊範圍知識——科目的知識、它的歷史與當代達人。這是一個集合技能，必須選擇專門技能。");
		skillList[6] = new skill("技藝",5,"自定義","此技能能讓使用者製作或維修物品——通常需要裝備和時間（由 Keeper 決定）。在成功的情況下，工匠能夠做出合適的東西，更高等級的成功，讓物品的品質更好、更準確。一個成功的技藝技能可用來製作複製品或偽造品。困難程度由原物的複雜程度與獨特性而定。如果要偽造文件，則需要偽造文書的技能。成功的技能判定能提供道具的資訊，像是它是何時何地製造的，揭露一些有關的歷史或是技術點，或由誰所製作。越好的專門訓練可以提供更好的特殊範圍知識——科目的知識、它的歷史與當代達人。這是一個集合技能，必須選擇專門技能。");
		skillList[7] = new skill("魅力",15,"","魅力有許多形式，包括肉體吸引、勾引、奉承或是簡單地釋出溫暖。魅力可以迫使某人按照某種方式行動，但不能與他的一般行為完全矛盾。魅力的對立技能是魅力或心理學。魅力可以用於議價，稍微壓低物品的售價。");
		skillList[8] = new skill("攀爬",20,"","此技能允許角色以繩索、工具或是徒手來爬樹、爬牆或是爬其他垂直平面。此技能也包括繞繩下降。有許多條件可能會影響攀爬難度，包括：表面硬度、支撐處、風力、可見度、雨水等。失敗的攀爬擲骰，表示指定的攀爬目標超出了使用者的能力。失敗的強推擲骰將使探索者掉落而受傷。成功的攀爬擲骰將允許探索者完全完成這次攀爬。長程的攀爬將提昇難度水平。");
		skillList[9] = new skill("電腦使用",5,"","此技能允許探索者以多種電腦語言進行編程，取得與分析隱蔽數據，入侵保全系統，探查複雜的網絡，或是調查或利用入侵、後門或病毒程式。網際網路提供了很豐富的資訊，探索者敲打鍵盤便能取得。使用網路去進行特殊與隱蔽資訊的搜尋要求使用電腦與圖書館使用的合併擲骰。如果只是要上網、收發電子郵件、使用人家寫好的一般的軟體，不需要使用這個技能。");
		skillList[10] = new skill("信用評級",0,"","這表現了探索者的富裕程度與金融信度。有錢能使鬼推磨；如果探索者嘗試用他的金融地位去達到目標，則使用此技能。信用評級可取代 APP 來給予第一印象。");
		skillList[11] = new skill("克蘇魯神話",0,"","這個技能反應了對非人類的（Lovecraft 式的）克蘇魯神話的瞭解。它並非建立在像學院式技能那樣的精確知識上。相反地，它表現的是人類的心靈對克蘇魯神話的開放與調和。因此，來自於如遭遇到深潛者的克蘇魯神話技能，無法轉移到其他狀況與實體。並且，它指涉到那「人不該知道的東西」，克蘇魯神話與人類知性相悖，暴露在它之中，人類心智將逐漸毀壞。");
		skillList[12] = new skill("偽裝",5,"","用來讓你看起來像是另外一個人。使用者改變姿態，服裝與聲音來進行偽裝，讓自己看起來像是另一種人。誇張的化妝可能有幫助。");
		skillList[13] = new skill("閃避",null,"","所有探索者都能本能地閃避打擊、投射武器等等。一個角色在同一個回合中，可以進行任意次數的閃避（但在面對特殊攻擊的時候只能進行一次）。閃避會和其他技能一樣依經驗提升。只要看到攻擊，就可以試著閃躲。子彈是無法閃避的，因為子彈是看不到的；角色只能進行掩護以讓自己更難擊中。（閃避技能不能強推）");
		skillList[14] = new skill("開車",20,"","有此技能的人，可以駕駛小客車或是小卡車，進行正常的操縱，應付尋常的車況問題。如果探索者想要擺脫或是跟蹤某人，將用得上駕駛擲骰。在一些文化中，這個技能是可替換的；因纽特人可能使用駕駛雪橇（Drive Dogsled），維多利亞人可能使用駕駛馬車（Drive Carriage）。");
		skillList[15] = new skill("電器維修",10,"","讓探索者可以維修或是改裝電器用品，像是自動點火器、電氣馬達、保險絲盒或是防盜警鈴。在當代，這個技能可以和電子學一同發揮一些作用。修理電氣裝置可能需要特別的零件或是工具。在1920年代，可能需要和機械維修混合使用。電器維修可能與現代爆破相關，像是電雷管、C-4 塑膠炸彈、地雷等。這些武器被設計成容易發展的；只有大失敗擲骰可能造成走火。爆破物拆除必須面對防拆除機械設計，因此是遠加棘手的；必須提升難度水平——見爆破技能。");
		skillList[16] = new skill("電子學",1,"","用於排除問題與維修電子設備。允許製作簡單的電子設備。這個技能是屬於現代的——對於 1920 年代的電子設備則是使用物理學與電器維修。不同於電器維修技能，電子學工作的需求條件通常不能臨時充數：它們是為特定工作特別設計的。通常，沒有正確的微晶片與電路板，除非技能使用者可以設計出某種變通方法，否則他就要倒楣了。");
		skillList[17] = new skill("話術",5,"","話術專用在口頭哄騙、欺騙與誤導，像是欺騙俱樂部的門衛放你進入、讓人連表格內容都沒讀過就簽名、讓警察朝向錯誤的方向等等。這個技能與心理學或話術對立。經過一段時間後，目標會發現他們剛才被騙了。話術的效果總是暫時的，無論他達到多好的效果和達成的難度有多高。話術可用於殺價。如果成功，賣家會忽然認為你提出了一個好主意；然後，如果買家之後又回來、並且嘗試購買其他東西，賣家將會拒絕之後的討價還價，甚至提高物品的售價。");
		skillList[18] = new skill("戰鬥(拳腳)",25,"","舉凡所有的肉搏戰鬥和可以路上撿到直接拿來用的基本「武器」，像是木棒、小刀、酒杯、椅腳。一些在武器表上找不到的武器的傷害，由 Keeper 合理地決定。");
		skillList[19] = new skill("戰鬥",0,"自定義","戰鬥技能指示了一個角色的近戰技能。你可以將技能點拿來購買任意的戰鬥專門技能，但不能購買戰鬥這個集合技能。選擇適合你的探索者的職業與歷史的專門技能。當戰鬥（打架）技能起始超過 50% 者，可以選擇將某種訓練加入背景裡頭。有無數的戰鬥風格存在著。武術僅僅是一種提昇人的戰鬥技能的方法。決定角色如何學習戰鬥的，無論是軍事訓練、武術班、或是街頭鬥毆訓練出來的戰鬥能力。「打架」如果聽起來對某些武術來說太粗魯了，可以以武術的名稱（像是「空手道」之類的）替換掉。");
		skillList[20] = new skill("戰鬥",0,"自定義","戰鬥技能指示了一個角色的近戰技能。你可以將技能點拿來購買任意的戰鬥專門技能，但不能購買戰鬥這個集合技能。選擇適合你的探索者的職業與歷史的專門技能。");
		skillList[21] = new skill("火器(手槍)",20,"","用於所有類似手槍的非連發火器。因此一些現代的機械手槍（MAC-11、Uzi 手槍等），在進行連發時，使用半自動槍技能。（火器技能不能強推）");
		skillList[22] = new skill("火器(步槍/散彈槍)",25,"","任何一種類型（槓桿式、手動式、半自動）的步槍或是散彈槍。因為散彈槍裝載的子彈是散射的，所以命中率不會因距離而減少，但傷害會減少。當以突擊步槍進行單發射擊時，使用此技能。（火器技能不能強推）");
		skillList[23] = new skill("火器",0,"自定義","包含所有意義下的火器，包括弓器。你可以將技能點拿來購買任意的專門技能，但不能購買火器這個集合技能。選擇適合你的探索者的職業與歷史的專門技能。（火器技能不能強推）");
		skillList[24] = new skill("急救",30,"","使用者能夠進行緊急的治療。包括：固定骨折肢體、暫時止血、處理燒傷、救醒溺水者、包紮與處理傷口等。急救無法處理疾病（需要醫藥技能）。\n為了有效治療，急救必須花上一小時來恢復 1 點 HP。只能嘗試一次，第二次嘗試必須進行強推。可以由兩人同時進行急救，只要有一人成功便可成功急救。成功的急救可以喚醒無意識者。在下回的傷害造成前，一個角色只能接受各一次急救與醫藥。\n處置一個瀕死角色時，成功的急救能夠穩定傷勢一小時、脫離瀕死狀態，並獲得一小時的 1 點暫時 HP。在一小時結束後，他必須做 CON 擲骰，如果失敗則失去這點 HP，並再次進入瀕死狀態。在瀕死狀態中，每回合都要進行 CON 擲骰，如果失敗角色便死亡。如果角色通過 CON 擲骰而活下來，可以重新再接受一次急救。\n只有急救可以解救瀕死角色，但在那之後，他還必須接受成功的醫藥或送醫。");
		skillList[25] = new skill("歷史",5,"","讓探索者可以想起一個國家、城市、種族或人物所代表的意義。一個成功的歷史擲骰，可以用於協助鑑定只有古人才熟悉的工具、技藝，或是理念。");
		skillList[26] = new skill("威脅",15,"","威脅有許多形式，包括實際武力、心理控制與恐嚇。用於使一個人感到恐慌、被脅迫，而去以某種方式行動。與威脅對立的技能是威脅或心理學。\n使用武器或是其他有力的恐嚇物來進行威脅可能降低難度。當威脅的強推擲骰失敗，一個可能的結果是驚嚇過度，超出了原先預期的意圖。\n威脅可以用於壓低物品或服務的售價。如果成功，賣家可能降低售價，或是免費拱手讓出，但之後，根據情況他們可能會考慮投警或報案。");
		skillList[27] = new skill("跳躍",20,"","成功的話，探索者可以助跑或助跑垂直躍上、躍下，或進行水平跳躍。掉落的時候，跳躍可以用來降低可能的掉落傷害。\n跳躍的使用包含三種：一般跳躍、艱難跳躍與極限跳躍（分別需要一般成功、艱難成功與極限成功）。作為原則，一般成功可以成功垂直躍下如他身高的高度、立定跳過如他身高的間隙，或是助跑跳過如他身高兩倍的間隙。極限成功的跳躍說不定可以跳過這個距離的兩倍。\n從一個高度掉落的話，成功的跳躍擲骰可以減少一半傷害。");
		skillList[28] = new skill("外語",1,"自定義","外語可以自由指定。一個探索者可以學會任意數量的語言。古老或未知語言（ 如 Aklo 或 Hyperborean 等）是不能選的，其他普通的地球語言都可以選擇。\n如果遇到了文言文的演講或是文本， Keeper 可以提高難度水平。一次成功的外語、母語擲骰通常允許探索者理解整本書。");
		skillList[29] = new skill("外語",1,"自定義","外語可以自由指定。一個探索者可以學會任意數量的語言。古老或未知語言（ 如 Aklo 或 Hyperborean 等）是不能選的，其他普通的地球語言都可以選擇。\n如果遇到了文言文的演講或是文本， Keeper 可以提高難度水平。一次成功的外語、母語擲骰通常允許探索者理解整本書。");
		skillList[30] = new skill("母語",null,"","母語指的是在嬰兒或是童年所使用的語言，大部分人只有一種母語。當探索員選擇了母語的種類後，這項技能的起始值自動從等同 EDU 的值開始：這便是探索者進行聽說讀寫的起始語言程度。\n如果遇到了文言文的演講或是文本， Keeper 可以提高難度水平。一次成功的外語、母語擲骰通常允許探索者理解整本書。");
		skillList[31] = new skill("法律",5,"","代表能知道恰當的法律、判例、合法行動或法庭程序的機會。以法律作為專業，可以帶來大量的財富和優越的政治職位，但需要多年的努力研習－－高度信用評級對此事業是至關重要的。在美國，你的法律實務必須被特定的聯邦或洲律師協會所承認。\n在其他國家時，成功的難度可能會提昇，除非該角色用上數月的時間研讀該國法律系統。");
		skillList[32] = new skill("圖書館使用",20,"","圖書館使用技能讓探索者能尋找資訊，像是一本特定的書籍、報紙，或是圖書館中的參考書，文件或數據的蒐集－－要是東西在那的話。每次使用此技能，要花上連續數小時來進行搜索。\n這技能可以找出上鎖櫃子或是稀有特別藏書的位置，不過可能要用說服、花言巧語、魅力、威脅、信用評級技能，或特別的憑證來取得這些書或資訊。");
		skillList[33] = new skill("聆聽",25,"","代表探索者者詮釋和了解聲音的能力，包括對話的偷聽、門後的嘀咕、咖啡廳中的悄悄話。 在迫近遭遇時，Keeper 可要求進行聆聽擲骰，決定探索者們是否察覺：你的探索者警覺到樹枝的折斷聲了嗎？延伸來說，高的聆聽技能也表示了角色平時的意識優劣。");
		skillList[34] = new skill("鎖匠",1,"","一名鎖匠可以開啟車門、圖書館窗戶，中國機關盒等，與滲透簡單的警鈴系統。使用者能夠修鎖、製作鎖匙，或是用萬能鎖匙、鐵絲和其他工具來開鎖。特別困難的鎖會降低技能的成功率。");
		skillList[35] = new skill("機械維修",10,"","這允許探索者可以維修壞掉的機械，或自己做一個新的。能夠做基本的木工和管道案子，以及建造物品（像是滑輪系統）、維修物品（像是蒸汽幫浦）。可能需要某些特殊的設備。這技能也可以開啟一般房鎖，但無法開啟更難的。見鎖匠技能。機械維修和電器維修是相輔相成的，在維修如汽車或飛機那樣的複雜裝置時，可能兩者都要用到。");
		skillList[36] = new skill("醫藥",1,"","使用者能診斷與處理意外、損傷、疾病與中毒等狀況，並可進行公開健康建議。如果在一個對此病症的處置並不拿手的時代，效果就很有限、不確定或沒有結果。醫藥技能提供了藥丸與藥劑、自然與人工的廣泛知識，了解其副作用與禁忌症。\n使用醫藥進行處置起碼需要一個小時的時間，可以在傷害後的任何時間進行處置，但是，如果不在傷害當天進行治療，治療的難度將會上升。成功接受醫藥處置者，將恢復 1D3 的 HP，除了瀕死的角色，必須先以急救穩定傷勢外。\n一個角色在傷害一旦造成後，只能進行各一次的醫藥與急救治療。成功的醫藥使用可以喚醒失去意識的人。\n處置重大傷勢（Major Wounds）時，成功的醫藥技能可在每週的康復擲骰時，提供一個額外的獎勵骰。\n在一間裝備優良的醫院裡進行醫藥處置， Keeper 可以使其自動成功。");
		skillList[37] = new skill("自然世界",10,"","原本是研究動植物在適合環境中生長的學問。19世紀時，這學問被分成許多學派（生物學、植物學等）。作為一個技能，這代表了傳統知識與農夫、漁人、熱血外行人或其他業餘者的觀察。可以廣泛地辨別物種、習性、棲地，也可以猜出對此物種而言的重要之處。如果想要的是自然世界的科學知識，應該去看看生物學、植物學與動物學技能。\n自然世界可精確也可不精確──這是一個鑑賞、判斷、傳統與激情的領域。使用自然世界可以判定馬的毛皮或某蝴蝶標本是極品還是虛有其表。");
		skillList[38] = new skill("導航",10,"","允許使用者不論在暴風或晴天、不論日與夜，都能找到他的方向。更高的技能點數，代表對於天文圖、表、儀器與衛星定位裝置更為了解。他也可以用以對一區域進行測量與製圖，不論是一個幾平方哩的小島或一個房間的內部——使用現代科技可以降低或取消困難水平。\n這種技能的擲骰結果必須保密，探索者只能嘗試，然後見証其結果。\n如果一個角色很熟悉這個區域，可以加上一顆獎勵骰。");
		skillList[39] = new skill("神祕學",5,"","使用者能了解神秘物品、文字與概念，並且鑑別所見的魔法書與神秘學暗語。神秘學者熟悉一系列來自埃及、蘇美、中世紀、文藝復興時代的西方（或許包括亞非）流傳下來的隱密知識。\n掌握確切書籍或許能夠提供神祕學的技能百分比。這技能無法用於對克蘇魯神話的咒語、魔法與書籍，不過神秘學的概念常被 Great Old Ones 的崇拜者所採用。");
		skillList[40] = new skill("操作重機",1,"","駕駛與操作坦克、鋤耕機、蒸氣鏟或是其他大型機械時的必備技能。學會這項技能之後，除非遇上危險的事件或路況，是不需要擲骰的。對於差異很大的機械，當遭遇相當不熟悉的情況， Keeper 可以決定降低探索者的技能，例如，一個習慣開推土機的人，就沒辦法很快習慣在船上的引擎室操作蒸氣渦輪機。");
		skillList[41] = new skill("說服",10,"","使用說服，透過理性推論、辯論與討論，來使目標相信特定觀念、概念或是信念。說服可用於不符事實的時候。成功的說服需要時間：至少需要一個小時。如果你希望快速說服人，你應該使用花言巧語。\n根據玩家所表述的目標，如果探索者以足夠的時間進行說服，其效果可以綿延無期；要到幾年後，遇到一些事情或是另一次說服才能改變他的看法。\n說服可用於殺價。如果成功，賣家會忽然認為你提出了一個好主意。");
		skillList[42] = new skill("駕駛",1,"自定義","等同於在空中或水中的開車技能，這是飛行、水上交通工具的操作技能。你可以將技能點拿來購買任意的專門技能，但不能購買駕駛這個集合技能。每種都從 01% 開始。\n任何人有適當該技能的人都可以在晴天、視線良好時進行航行或航海，而在暴風雨、儀器導航、低能見度或其他困難情況時進行技能擲骰。壞天氣、糟糕的能見度與損傷將會增加航行或航海的困難度。");
		skillList[43] = new skill("心理學",10,"","密集的精神分析可以回復患者的 San 值。每個月，以一個 1D100 進行如分析者或醫師的精神分析技能的擲骰，以獲得治療的好處。如果擲骰成功，患者恢復 1D3 的 San 值。如果失敗，沒有任何事情發生。如果大失敗，患者失去 1D6 的 San 值：某些意外或戲劇化的反撲進到治療裡頭，患者與治療師的關係將破裂。\n在遊戲中，精神分析無法加快不定期發狂的恢復，這需要 1D6 個月的專業治療，精神治療是其中一個部份。\n成功的使用此技能，允許角色去暫時脫離恐懼症或狂躁症，或是擺脫幻覺。在遊戲中，這允許一個發狂的探索者忽視恐懼症或狂躁症的效果，譬如允許一個幽閉恐懼症患者躲在櫥櫃 10 分鐘。同樣，一個人可以做一個精神分析擲骰來讓一個妄想的探索者在一段時間內看穿他們的幻覺。\n心理治療師的治療可以在不定期發狂的期間增加病人的當前 San 值。\n心理分析無法讓人的當前 San 值超過最大值。");
		skillList[44] = new skill("精神分析",1,"","通常所有人類都會有的技能，它可以讓使用者對一個人進行研究，並對他的動機和個性形成想法。 Keeper 可以選擇對擲骰的結果保密，只宣布出資訊，真假必須自己判斷。");
		skillList[45] = new skill("科學",1,"自定義","科學科目的實踐性與理論性技能需要正統的教育與訓練，雖然，也是可能有博學的素人科學家存在。知識與觀點受限於時代。你可以將技能點拿來購買任意的專門技能，但不能購買科學這個集合技能。\n每個科目包含一個特定的學說，並且這個清單不是窮舉的。許多科目有重疊之處，譬如數學與密碼學、植物學與生物學、化學與藥學。當一個角色沒有明顯的學說專長，他擲骰的難度可能會提升，由 Keeper 決定。");
		skillList[46] = new skill("科學",1,"自定義","科學科目的實踐性與理論性技能需要正統的教育與訓練，雖然，也是可能有博學的素人科學家存在。知識與觀點受限於時代。你可以將技能點拿來購買任意的專門技能，但不能購買科學這個集合技能。\n每個科目包含一個特定的學說，並且這個清單不是窮舉的。許多科目有重疊之處，譬如數學與密碼學、植物學與生物學、化學與藥學。當一個角色沒有明顯的學說專長，他擲骰的難度可能會提升，由 Keeper 決定。");
		skillList[47] = new skill("科學",1,"自定義","科學科目的實踐性與理論性技能需要正統的教育與訓練，雖然，也是可能有博學的素人科學家存在。知識與觀點受限於時代。你可以將技能點拿來購買任意的專門技能，但不能購買科學這個集合技能。\n每個科目包含一個特定的學說，並且這個清單不是窮舉的。許多科目有重疊之處，譬如數學與密碼學、植物學與生物學、化學與藥學。當一個角色沒有明顯的學說專長，他擲骰的難度可能會提升，由 Keeper 決定。");
		skillList[48] = new skill("巧手",10,"","允許視覺掩蓋、保密，或是偽裝物體，可能是以殘骸、布料或是其他媒介或錯覺促進材質，也可能是透過製作暗版、錯誤隔間，或是透過重新上色或改變物品的特徵以逃避偵察。大型物體將增加隱藏的困難度。\n巧手也包括扒人口袋、手掌藏牌與秘密使用手機等。");
		skillList[49] = new skill("識破",25,"","這技能允許人可以發現密門或秘密隔間、注意到隱藏的入侵者、找到不顯眼的線索、發覺重新上漆的車子、感知到埋伏、注意到鼓起的口袋，或任何類似的情形。這在探索者的眾工具中是一個重要的技能。\n如果探索者只有稍縱即逝的機會來看到某物， Keeper 可以提升難度水平。如果角色在執行徹底的搜尋， Keeper 可能會獎勵一個自動成功。難度也會因環境而改變，在一個凌亂的房間裡將更難發現什麼東西。");
		skillList[50] = new skill("匿蹤",20,"","不驚擾任何人的情況下安靜移動、隱藏的技巧。當嘗試避免發覺時，該玩家必須使用匿蹤擲骰。依此技能可以讓角色嘗試安靜移動或是偽裝掩飾。這個技能同時讓角色可以維持一定程度的耐心與冷靜，在長時間保持不動與無形。");
		skillList[51] = new skill("生存",10,"自定義","此技能的知識提供在極端環境中生存的專門知識，像是沙漠或是極地條件，或像是在海洋上或是在荒野地帶中。其中有的是打獵、建造避難所、避免危險（像是避免有毒植物）等的知識等。\n你可以將技能點拿來購買任意的專門技能，但不能購買生存這個集合技能。當此技能選擇以後，環境專長便決定，譬如：生存（沙漠）、（海洋）、（極地）等。當一個角色沒有明顯的生存專長，將可能提升技能的難度水平，由 Keeper 判定。");
		skillList[52] = new skill("游泳",20,"","在水或其他液體上漂浮和移動的能力。只有在 Keeper 認為遇到危機和危險時，才需要進行游泳擲骰。失敗的擲骰將持續失去 HP。也可能讓人被水沖走，部份或完全地溺水。");
		skillList[53] = new skill("投擲",20,"","用物體丟擲目標，或是用物體的正確部份丟擲目標（像是刀或飛斧的刃部），使用投擲。\n拳頭大的理想平衡物體，可以猛擲出 STR 碼的距離。\n如果投擲失敗，物體將按照一定的隨機距離飛往目標。 Keeper 必須比較擲骰的結果與成功的高值，並選擇一個合適的距離來決定物體飛到哪。\n投擲技能可以用於戰鬥，投擲刀斧、石頭、長矛、手榴彈或回力標。");
		skillList[54] = new skill("追蹤",10,"","透過追蹤，探索者可由軟土和葉子追蹤從上通過的人、車或動物。時間經過長度、下雨，與地面的型態都可能影響難度水平。");
		skillList[55] = new skill("技能",0,"自定義","玩家自行決定技能，技能功能請向Keeper確認。");
		skillList[56] = new skill("技能",0,"自定義","玩家自行決定技能，技能功能請向Keeper確認。");
		skillList[57] = new skill("技能",0,"自定義","玩家自行決定技能，技能功能請向Keeper確認。");
		skillList[58] = new skill("技能",0,"自定義","玩家自行決定技能，技能功能請向Keeper確認。");
		skillList[59] = new skill("技能",0,"自定義","玩家自行決定技能，技能功能請向Keeper確認。");
	}
	function updateOccupation(index,point){
		skillList[index].occupationPoint = point;
		
		// if (!(subName=="")) skillList[data.list].subName = data.subName;
	};
	
	function updateAllot(index,point){
		skillList[index].allotPoint = point;
	};
	function updateSub(i,data){
		skillList[i].subName = data;
	}
	
	function firstSet(characteristics){
		skillList[13].basicPoint = Math.floor(characteristics.dex/2);
		skillList[13].totalPointCalculate();
		skillList[30].basicPoint = characteristics.edu;
		skillList[30].totalPointCalculate();
	};
	

	
	var SkillManager = (function(){
		var occupationPointTotal = 0;
		var allotPointTotal = 0;
		
		var remainPoint = {
			occupation: 0,
			allot: 0
		}
		var remainOccupationPoint;
		var remainAllotPoint;
		function totalPoint(list,weight){
			occupationPointTotal = parseInt(list.str)*parseInt(weight.str) + parseInt(list.con)*parseInt(weight.con) + parseInt(list.dex)*parseInt(weight.dex)
								 + parseInt(list.app)*parseInt(weight.app) + parseInt(list.pow)*parseInt(weight.pow) + parseInt(list.siz)*parseInt(weight.siz)
								 + parseInt(list.Int)*parseInt(weight.Int) + parseInt(list.edu)*parseInt(weight.edu) + parseInt(list.luk)*parseInt(weight.luk);
			allotPointTotal = list.Int*2;
		}
		
		function remainPointCalculate(){
			var usedOccupationPoint = 0;
			var usedAllotPointTotal = 0;
			for (var i=0;i<60;i++){
				usedOccupationPoint += parseInt(skillList[i].occupationPoint);
				usedAllotPointTotal += parseInt(skillList[i].allotPoint);
			}
			remainPoint.occupation = occupationPointTotal - usedOccupationPoint;
			remainPoint.allot = allotPointTotal - usedAllotPointTotal;
			return remainPoint;
		}
		
		function checkPoint(){
			
			for (var i=0;i<skillList.length;i++){
				if (skillList[i].total>99) return skillList[i].name + "的點數超過99";
			}
			
			if (remainPoint.occupation<0) return "職業點數使用超過上限";
			else if (remainPoint.occupation>0) return "職業點數尚未使用盡";
			else if (remainPoint.allot<0) return "興趣點數使用超過上限";
			else if (remainPoint.allot>0) return "興趣點數尚未用盡";
			else return false;
		}
		
		return {
			updateOccupation: function(index,point){
				updateOccupation(index,point);
			},
			updateAllot: function(index,point){
				updateAllot(index,point);
			},
			updateSub: function(index,data){
				updateSub(index,data);
			},
			total: function(){
				for (var i=0;i<60;i++)	skillList[i].totalPointCalculate(); 
			},
			list: function(i){
				return skillList[i];
			},
			listAll: function(){
				return skillList;
			},
			firstSet: function(characteristics){
				firstSet(characteristics);
			},
			totalPoint: function(list,weight){
				totalPoint(list,weight);
			},
			remainPoint: function(){		//剩餘點數
				return remainPointCalculate();
			},
			checkPoint: function(){	
				return checkPoint();
			},
			userSkill: function(){
				return [4,5,6,19,20,23,28,29,42,45,46,47,51,55,56,57,58,59]
			},
			reSkill: function(){
				reSkill();
			}
		}
	})();
	
	window.Skill = {
		SkillManager: SkillManager
	};
})();